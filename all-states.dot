digraph all_states {

  node [layer=all];
  edge [layer=all];

  layers="happy:sad"

  before_existence [ layer="happy" label="no stack" ]
  after_existence [ layer="happy" label="no stack" ]

  updateable_stack [ layer="happy" label="an updateable stack\n(various states)" color="transparent" ]
  stuck_stack [ layer="sad" label="a non-updateable stack\n(various states)" color="transparent" ]
  empty_stack [ layer="sad" label="non-deleted stack\nwith no extant resources\n(various states)" color="transparent" ]

  empty_stack -> DELETE_IN_PROGRESS [ layer="sad" ]

  CREATE_COMPLETE [ layer="happy" ]
  REVIEW_IN_PROGRESS [ layer="happy" style=dotted ]
  CREATE_IN_PROGRESS [ layer="happy" style=dotted ]
  CREATE_FAILED [ layer="sad" ]
  DELETE_COMPLETE [ layer="happy" ]
  DELETE_FAILED [ layer="sad" ]
  DELETE_IN_PROGRESS [ layer="happy" style=dotted ]
  ROLLBACK_COMPLETE [ layer="sad" ]
  ROLLBACK_FAILED [ layer="sad" ]
  ROLLBACK_IN_PROGRESS [ layer="sad" style=dotted ]
  UPDATE_COMPLETE [ layer="happy" ]
  UPDATE_COMPLETE_CLEANUP_IN_PROGRESS [ layer="happy" style=dotted label="UPDATE_COMPLETE\nCLEANUP_IN_PROGRESS" ]
  UPDATE_IN_PROGRESS [ layer="happy" style=dotted ]
  UPDATE_ROLLBACK_COMPLETE [ layer="sad" ]
  UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS [ layer="sad" style=dotted label="UPDATE_ROLLBACK_COMPLETE\nCLEANUP_IN_PROGRESS" ]
  UPDATE_ROLLBACK_FAILED [ layer="sad" ]
  UPDATE_ROLLBACK_IN_PROGRESS [ layer="sad" style=dotted ]

  edge [layer=happy];
  before_existence -> CREATE_IN_PROGRESS
  before_existence -> REVIEW_IN_PROGRESS -> CREATE_IN_PROGRESS
  CREATE_IN_PROGRESS -> CREATE_COMPLETE
  CREATE_COMPLETE -> updateable_stack

  REVIEW_IN_PROGRESS -> DELETE_COMPLETE

  edge [layer=sad];
  CREATE_IN_PROGRESS -> ROLLBACK_IN_PROGRESS -> ROLLBACK_COMPLETE
  ROLLBACK_COMPLETE -> empty_stack
  ROLLBACK_IN_PROGRESS -> ROLLBACK_FAILED
  ROLLBACK_FAILED -> stuck_stack

  edge [layer=sad];
  CREATE_IN_PROGRESS -> CREATE_FAILED // ?
  CREATE_FAILED -> empty_stack // ?
  stuck_stack -> DELETE_IN_PROGRESS

  edge [layer=happy];
  updateable_stack -> UPDATE_IN_PROGRESS -> UPDATE_COMPLETE_CLEANUP_IN_PROGRESS -> UPDATE_COMPLETE -> updateable_stack

  edge [layer=sad];
  { UPDATE_IN_PROGRESS } -> UPDATE_ROLLBACK_IN_PROGRESS -> UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS -> { UPDATE_ROLLBACK_COMPLETE, UPDATE_ROLLBACK_FAILED }
  UPDATE_ROLLBACK_COMPLETE -> updateable_stack
  UPDATE_ROLLBACK_IN_PROGRESS -> UPDATE_ROLLBACK_FAILED -> stuck_stack // maybe?
  UPDATE_ROLLBACK_FAILED -> UPDATE_ROLLBACK_IN_PROGRESS

  edge [layer=happy];
  updateable_stack -> DELETE_IN_PROGRESS
  DELETE_IN_PROGRESS -> DELETE_COMPLETE
  DELETE_COMPLETE -> after_existence [ label=" 90 days later" ]

  edge [layer=sad];
  DELETE_IN_PROGRESS -> DELETE_FAILED [ constraint="false" ]
  DELETE_FAILED -> stuck_stack

}
// # vi: set sw=2 et ai :
